{"version":3,"file":"react-formik-stepper.cjs.production.min.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport 'animate.css';\nimport { FormikStepperProps } from './types/FormikStepperProps';\nimport { FormikTransitions } from './types/FormikTransitions';\n\nconst FormikStepper = (props: FormikStepperProps) => {\n  const { children, animate = true, ...rest } = props;\n\n  const getSteps = () => React.Children.toArray(children);\n\n  const totalSteps = getSteps().length;\n  const [step, setStep] = useState(0);\n  const [classes, setClasses] = useState<{\n    [key: string]: string;\n  }>({});\n\n  let child = Array.isArray(children) ? children[step] : children;\n  const childIndex = Array.isArray(children) ? step : 0;\n  const schema = yup.object().shape(child.props?.validation || {});\n\n  const transitions = {\n    enterRight: `animate__animated animate__fadeInRight`,\n    enterLeft: `animate__animated animate__fadeInLeft`,\n    exitRight: `animate__animated animate__fadeOutRight`,\n    exitLeft: `animate__animated animate__fadeOutLeft`,\n  };\n\n  const setActiveStep = (next: number) => {\n    if (next === step) return;\n\n    if (isInvalidStep(next)) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(`${next + 1} is an invalid step`);\n      }\n      return;\n    }\n\n    const classes: FormikTransitions = {};\n\n    if (step < next) {\n      //slide left\n      classes[step] = transitions.exitLeft;\n      classes[next] = transitions.enterRight;\n    } else {\n      //slide right\n      classes[step] = transitions.exitRight;\n      classes[next] = transitions.enterLeft;\n    }\n\n    setClasses(classes);\n    setTimeout(() => {\n      setStep(next);\n    }, 200);\n  };\n\n  const isInvalidStep = (next: number) => {\n    return next < 0 || next >= totalSteps;\n  };\n\n  const isReactComponent = (child: React.ReactElement) => {\n    const { type } = child;\n\n    return typeof type === 'function' || typeof type === 'object';\n  };\n\n  const followingComponentsRequireValidation = () => {\n    const components = getSteps().splice(step + 1, totalSteps);\n\n    return (components as React.ReactElement[]).some(comp => {\n      if (comp.props?.validation) {\n        return true;\n      }\n      return false;\n    });\n  };\n\n  const isEmpty = (obj: { [key: string]: any }) => {\n    return Object.keys(obj).length === 0;\n  };\n\n  // remove validation from props\n  const { validation, ...childProps } = child.props;\n  const filteredChild = { ...child, props: childProps };\n\n  return (\n    <Formik {...rest} validationSchema={schema}>\n      {({ validateForm }) => (\n        <Step transitions={Boolean(animate) ? classes[childIndex] : ''}>\n          {isReactComponent(child)\n            ? React.cloneElement(filteredChild, {\n                currentStep: step + 1,\n                totalSteps,\n                nextStep: () => {\n                  validateForm().then(errors => {\n                    if (isEmpty(errors)) {\n                      setActiveStep(step + 1);\n                    }\n                  });\n                },\n                previousStep: () => setActiveStep(step - 1),\n                firstStep: () => setActiveStep(0),\n                goToStep: (next: number) => setActiveStep(next - 1),\n                lastStep: () => {\n                  if (followingComponentsRequireValidation()) {\n                    if (process.env.NODE_ENV !== 'production') {\n                      console.error('Following components require validation');\n                    }\n                  } else {\n                    validateForm().then(errors => {\n                      if (isEmpty(errors)) {\n                        setActiveStep(totalSteps - 1);\n                      }\n                    });\n                  }\n                },\n              })\n            : child}\n        </Step>\n      )}\n    </Formik>\n  );\n};\n\nexport default FormikStepper;\n\nconst Step = ({\n  children,\n  transitions,\n}: {\n  children: React.ReactNode;\n  transitions: string;\n}) => {\n  return <div className={transitions}>{children}</div>;\n};\n"],"names":["Step","React","className","transitions","children","props","animate","rest","getSteps","Children","toArray","totalSteps","length","useState","step","setStep","classes","setClasses","child","Array","isArray","childIndex","schema","yup","shape","validation","setActiveStep","next","isInvalidStep","setTimeout","isEmpty","obj","Object","keys","childProps","filteredChild","Formik","validationSchema","validateForm","Boolean","type","isReactComponent","cloneElement","currentStep","nextStep","then","errors","previousStep","firstStep","goToStep","lastStep","splice","some","comp","_comp$props"],"mappings":"qmBA+HMA,EAAO,YAOX,OAAOC,uBAAKC,YALZC,eADAC,2BAzHoB,SAACC,SACbD,EAAsCC,EAAtCD,WAAsCC,EAA5BC,QAAAA,gBAAmBC,IAASF,KAExCG,EAAW,WAAA,OAAMP,EAAMQ,SAASC,QAAQN,IAExCO,EAAaH,IAAWI,SACNC,WAAS,GAA1BC,OAAMC,SACiBF,WAE3B,IAFIG,OAASC,OAIZC,EAAQC,MAAMC,QAAQhB,GAAYA,EAASU,GAAQV,EACjDiB,EAAaF,MAAMC,QAAQhB,GAAYU,EAAO,EAC9CQ,EAASC,WAAaC,gBAAMN,EAAMb,gBAAOoB,aAAc,IASvDC,EAAgB,SAACC,GACrB,GAAIA,IAASb,IAETc,EAAcD,GAAlB,CAOA,IAAMX,EAA6B,GAE/BF,EAAOa,GAETX,EAAQF,4CACRE,EAAQW,8CAGRX,EAAQF,6CACRE,EAAQW,4CAGVV,EAAWD,GACXa,YAAW,WACTd,EAAQY,KACP,OAGCC,EAAgB,SAACD,GACrB,OAAOA,EAAO,GAAKA,GAAQhB,GAoBvBmB,EAAU,SAACC,GACf,OAAmC,IAA5BC,OAAOC,KAAKF,GAAKnB,QAIHsB,IAAehB,EAAMb,SACtC8B,OAAqBjB,GAAOb,MAAO6B,IAEzC,OACEjC,gBAACmC,0BAAW7B,GAAM8B,iBAAkBf,KACjC,YAAA,IAAGgB,IAAAA,aAAH,OACCrC,gBAACD,GAAKG,YAAaoC,QAAQjC,GAAWU,EAAQK,GAAc,IA5BzC,SAACH,GACxB,IAAQsB,EAAStB,EAATsB,KAER,MAAuB,mBAATA,GAAuC,iBAATA,EA0BrCC,CAAiBvB,GACdjB,EAAMyC,aAAaP,EAAe,CAChCQ,YAAa7B,EAAO,EACpBH,WAAAA,EACAiC,SAAU,WACRN,IAAeO,MAAK,SAAAC,GACdhB,EAAQgB,IACVpB,EAAcZ,EAAO,OAI3BiC,aAAc,WAAA,OAAMrB,EAAcZ,EAAO,IACzCkC,UAAW,WAAA,OAAMtB,EAAc,IAC/BuB,SAAU,SAACtB,GAAD,OAAkBD,EAAcC,EAAO,IACjDuB,SAAU,WApCH1C,IAAW2C,OAAOrC,EAAO,EAAGH,GAEHyC,MAAK,SAAAC,SAC/C,iBAAIA,EAAKhD,SAALiD,EAAY7B,gBAuCFa,IAAeO,MAAK,SAAAC,GACdhB,EAAQgB,IACVpB,EAAcf,EAAa,SAMrCO"}